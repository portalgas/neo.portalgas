{#
/**
 * CakePHP(tm) : Rapid Development Framework (http://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright     Copyright (c) Cake Software Foundation, Inc. (http://cakefoundation.org)
 * @link          http://cakephp.org CakePHP(tm) Project
 * @since         2.0.0
 * @license       http://www.opensource.org/licenses/mit-license.php MIT License
 */
#}
{% set associations = {'BelongsTo': [], 'HasOne': [], 'HasMany': [], 'BelongsToMany': []}|merge(associations) %}
{% set fieldsData = Bake.getViewFieldsData(fields, schema, associations) %}
{% set associationFields = fieldsData.associationFields %}
{% set groupedFields = fieldsData.groupedFields %}
{% set pK = '$' ~ singularVar ~ '->' ~ primaryKey[0] %}
<section class="content-header">
  <h1>
    <?php echo __('{{ singularHumanName }}'); ?>
    <small><?php echo __('View'); ?></small>
  </h1>
  <ol class="breadcrumb">
    <li><a href="<?php echo $this->Url->build('/'); ?>"><i class="fa fa-home"></i> <?php echo __('Home'); ?></a></li>
    <li><a href="<?php echo $this->Url->build(['action' => 'index']); ?>"><i class="fa fa-list"></i> <?php echo __('List'); ?></a></li>
  </ol>
</section>

<!-- Main content -->
<section class="content">
  <div class="row">
    <div class="col-md-12">
      <div class="box box-solid">
        <div class="box-header with-border">
          <i class="fa fa-info"></i>
          <h3 class="box-title"><?php echo __('Information'); ?></h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">

<?php 
echo '<div class="row">';
{% if groupedFields['string'] %}
{% for field in groupedFields['string'] %}
if(!empty(${{ singularVar }}->{{ field }})) {
  echo '<div class="col-sm-3 border-right">';
  echo '<div class="description-block">';
{% if associationFields[field] %}
{% set details = associationFields[field] %}
echo '  <h5 class="description-header">';
echo ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '';
echo '</h5>';
echo '  <span class="description-text-disabled">';
echo __('{{ details.property|humanize }}');
echo '</span>';            
{% else %}
echo '  <h5 class="description-header">';
echo h(${{ singularVar }}->{{ field }});
echo '</h5>';
echo '  <span class="description-text-disabled">';
echo __('{{ field|humanize }}');
echo '</span>';
{% endif %}
  echo '</div>';
  echo '</div>'; // <!-- /.col -->
} // end if(!empty(${{ singularVar }}->{{ field }}))
{% endfor %}
{% endif %}
{% if associations.HasOne %}
{% for alias, details in associations.HasOne %}
if(!empty(${{ singularVar }}->{{ field }})) {
  echo '<div class="col-sm-3 border-right">';
  echo '<div class="description-block">';
  echo '  <h5 class="description-header">';
  echo ${{ singularVar }}->has('{{ details.property }}') ? $this->Html->link(${{ singularVar }}->{{ details.property }}->{{ details.displayField }}, ['controller' => '{{ details.controller }}', 'action' => 'view', ${{ singularVar }}->{{ details.property }}->{{ details.primaryKey[0] }}]) : '';
  echo '</h5>';
  echo '  <span class="description-text-disabled">';
  echo __('{{ alias|underscore|singularize|humanize }}');
  echo '</span>';
  echo '</div>';
  echo '</div>'; // <!-- /.col -->
} // end if(!empty(${{ singularVar }}->{{ field }}))            
{% endfor %}
{% endif %}
{% if groupedFields.number %}
{% for field in groupedFields.number %}
if(!empty(${{ singularVar }}->{{ field }})) {
  echo '<div class="col-sm-3 border-right">';
  echo '<div class="description-block">';
  echo '  <h5 class="description-header">';
  echo $this->Number->format(${{ singularVar }}->{{ field }});
  echo '</h5>';
  echo '  <span class="description-text-disabled">';
  echo __('{{ field|humanize }}');
  echo '</span>';
  echo '</div>';
  echo '</div>'; // <!-- /.col -->
} // end if(!empty(${{ singularVar }}->{{ field }}))            
{% endfor %}
{% endif %}
{% if groupedFields.date %}
{% for field in groupedFields.date %}
if(!empty(${{ singularVar }}->{{ field }})) {
  echo '<div class="col-sm-3 border-right">';
  echo '<div class="description-block">';
  echo '  <h5 class="description-header">';
  echo h(${{ singularVar }}->{{ field }});
  echo '</h5>';
  echo '  <span class="description-text-disabled">';
  echo __('{{ field|humanize }}');
  echo '</span>';
  echo '</div>';
  echo '</div>'; // <!-- /.col -->
} // end if(!empty(${{ singularVar }}->{{ field }}))            
{% endfor %}
{% endif %}
{% if groupedFields.boolean %}
{% for field in groupedFields.boolean %}
if(!empty(${{ singularVar }}->{{ field }})) {
  echo '<div class="col-sm-3 border-right">';
  echo '<div class="description-block">';
  echo '  <h5 class="description-header">';
  echo ${{ singularVar }}->{{ field }} ? __('Yes') : __('No');
  echo '</h5>';
  echo '  <span class="description-text-disabled">';
  echo __('{{ field|humanize }}');
  echo '</span>';
  echo '</div>';
  echo '</div>'; // <!-- /.col -->
} // end if(!empty(${{ singularVar }}->{{ field }}))            
{% endfor %}
{% endif %}
echo '</div>'; // .row
?>
        </div>
      </div>
    </div>
  </div>

{% if groupedFields.text %}
{% for field in groupedFields.text %}
<?php 
if(!empty(${{ singularVar }}->{{ field }})) {
?>
  <div class="row">
    <div class="col-md-12">
      <div class="box box-solid">
        <div class="box-header with-border">
          <i class="fa fa-text-width"></i>
          <h3 class="box-title"><?= __('{{ field|humanize }}') ?></h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
            <?= $this->Text->autoParagraph(${{ singularVar }}->{{ field }}); ?>
        </div>
      </div>
    </div>
  </div>
<?php
}
?>
{% endfor %}
{% endif %}
{% set relations = associations.BelongsToMany|merge(associations.HasMany) %}
{% for alias, details in relations %}
{% set otherSingularVar = alias|variable %}
{% set otherPluralHumanName = details.controller|underscore|humanize %}
  <div class="row">
    <div class="col-md-12">
      <div class="box box-solid">
        <div class="box-header with-border">
          <i class="fa fa-share-alt"></i>
          <h3 class="box-title"><?= __('{{ otherPluralHumanName }}') ?></h3>
        </div>
        <!-- /.box-header -->
        <div class="box-body">
          <?php if (!empty(${{ singularVar }}->{{ details.property }})): ?>
          <table class="table table-hover">
              <tr>
                  <th scope="col" class="actions text-left"><?= __('Actions') ?></th>
  {% for field in details.fields %}
                  <th scope="col"><?= __('{{ field|humanize }}') ?></th>
  {% endfor %}
              <?php 
              echo '</tr>';

              foreach (${{ singularVar }}->{{ details.property }} as ${{ otherSingularVar }}) {
              echo '<tr>';
              echo '<td class="actions text-left">';
              echo $this->Html->link('', ['controller' => '{{ details.controller }}', 'action' => 'view', {{ otherPk|raw }}], ['class'=>'btn btn-primary glyphicon glyphicon-eye-open', 'title' => __('View')]);
              echo $this->Html->link('', ['controller' => '{{ details.controller }}', 'action' => 'edit', {{ otherPk|raw }}], ['class'=>'btn btn-primary glyphicon glyphicon-pencil', 'title' => __('Edit')]);
              if(!${{ otherSingularVar }}->is_system) 
                echo $this->Form->postLink('', ['controller' => '{{ details.controller }}', 'action' => 'delete', {{ otherPk|raw }}], ['confirm' => __('Are you sure you want to delete # {0}?', ${{ otherSingularVar }}->name), 'title' => __('Delete'), 'class' => 'btn btn-danger glyphicon glyphicon-trash']);
              else
                echo $this->Html->link('', [], ['title' => __('Delete'), 'class' => 'btn btn-danger glyphicon glyphicon-trash disabled']);
                      ?>
                  </td>              
  {% for field in details.fields %}
                  <td><?= h(${{ otherSingularVar }}->{{ field }}) ?></td>
  {% endfor %}
  {% set otherPk = '$' ~ otherSingularVar ~ '->' ~ details.primaryKey[0] %}
              </tr>
              <?php } ?>
          </table>
          <?php endif; ?>
        </div>
      </div>
    </div>
  </div>
{% endfor %}
</section>
